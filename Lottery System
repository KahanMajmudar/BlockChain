 pragma solidity ^0.5.0;
 
 contract Lottery{
     
     address payable [] public players;
     address public manager;
     
     
     constructor() public {
     
         manager = msg.sender;    
     }
     
     
     function getPlayers() public view returns (address payable [] memory, uint){
         
         return (players,players.length);
         
     }
     
     function enter() public payable{
         
        require(msg.value > 0.01 ether);
        players.push(msg.sender);
        
     }
     
     function random() private view returns (uint) {
        return (uint(keccak256(abi.encodePacked(block.difficulty,now,players))));
     }
     
     function pickWinner() public restricted{
        
        address payable winner = players[random() % players.length];
        
        winner.transfer(address(this).balance);
        players = new address payable[](0);
    }
    
    modifier restricted() {
        
        require(msg.sender == manager);
        _;
        
    }

     
}
